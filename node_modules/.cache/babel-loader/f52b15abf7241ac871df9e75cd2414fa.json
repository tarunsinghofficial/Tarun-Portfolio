{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\tarun\\\\Mern\\\\React\\\\learn-basics\\\\src\\\\Reveal.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useRef, useState } from 'react';\nimport classNames from 'classnames';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Reveal = _ref => {\n  _s();\n\n  let {\n    children,\n    direction = 'left'\n  } = _ref;\n  const [isVisible, setIsVisible] = useState(false);\n  const ref = useRef(null);\n  useEffect(() => {\n    const revealElement = ref.current;\n    const options = {\n      threshold: 0.2\n    };\n    const observer = new IntersectionObserver(entries => {\n      entries.forEach(entry => {\n        if (entry.isIntersecting) {\n          setIsVisible(true);\n        }\n      });\n    }, options);\n    observer.observe(revealElement);\n    return () => observer.unobserve(revealElement);\n  }, []);\n  const revealClass = classNames('transition-transform duration-500', {\n    'translate-x-10': direction === 'left',\n    'translate-x--10': direction === 'right',\n    'translate-y-10': direction === 'up',\n    'translate-y--10': direction === 'down'\n  });\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    ref: ref,\n    className: `transform ${revealClass} opacity-0 ${isVisible ? 'revealed' : ''}`,\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 34,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Reveal, \"7N8EcRPlcY6o9kzg5IgMZgWhyLI=\");\n\n_c = Reveal;\nexport default Reveal;\n\nvar _c;\n\n$RefreshReg$(_c, \"Reveal\");","map":{"version":3,"names":["React","useEffect","useRef","useState","classNames","Reveal","children","direction","isVisible","setIsVisible","ref","revealElement","current","options","threshold","observer","IntersectionObserver","entries","forEach","entry","isIntersecting","observe","unobserve","revealClass"],"sources":["C:/Users/tarun/Mern/React/learn-basics/src/Reveal.js"],"sourcesContent":["import React, { useEffect, useRef, useState } from 'react';\r\nimport classNames from 'classnames';\r\n\r\nconst Reveal = ({ children, direction = 'left' }) => {\r\n  const [isVisible, setIsVisible] = useState(false);\r\n  const ref = useRef(null);\r\n\r\n  useEffect(() => {\r\n    const revealElement = ref.current;\r\n    const options = {\r\n      threshold: 0.2,\r\n    };\r\n\r\n    const observer = new IntersectionObserver((entries) => {\r\n      entries.forEach((entry) => {\r\n        if (entry.isIntersecting) {\r\n          setIsVisible(true);\r\n        }\r\n      });\r\n    }, options);\r\n\r\n    observer.observe(revealElement);\r\n    return () => observer.unobserve(revealElement);\r\n  }, []);\r\n\r\n  const revealClass = classNames('transition-transform duration-500', {\r\n    'translate-x-10': direction === 'left',\r\n    'translate-x--10': direction === 'right',\r\n    'translate-y-10': direction === 'up',\r\n    'translate-y--10': direction === 'down',\r\n  });\r\n\r\n  return (\r\n    <div\r\n      ref={ref}\r\n      className={`transform ${revealClass} opacity-0 ${isVisible ? 'revealed' : ''}`}\r\n    >\r\n      {children}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Reveal;\r\n"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,MAA3B,EAAmCC,QAAnC,QAAmD,OAAnD;AACA,OAAOC,UAAP,MAAuB,YAAvB;;;AAEA,MAAMC,MAAM,GAAG,QAAsC;EAAA;;EAAA,IAArC;IAAEC,QAAF;IAAYC,SAAS,GAAG;EAAxB,CAAqC;EACnD,MAAM,CAACC,SAAD,EAAYC,YAAZ,IAA4BN,QAAQ,CAAC,KAAD,CAA1C;EACA,MAAMO,GAAG,GAAGR,MAAM,CAAC,IAAD,CAAlB;EAEAD,SAAS,CAAC,MAAM;IACd,MAAMU,aAAa,GAAGD,GAAG,CAACE,OAA1B;IACA,MAAMC,OAAO,GAAG;MACdC,SAAS,EAAE;IADG,CAAhB;IAIA,MAAMC,QAAQ,GAAG,IAAIC,oBAAJ,CAA0BC,OAAD,IAAa;MACrDA,OAAO,CAACC,OAAR,CAAiBC,KAAD,IAAW;QACzB,IAAIA,KAAK,CAACC,cAAV,EAA0B;UACxBX,YAAY,CAAC,IAAD,CAAZ;QACD;MACF,CAJD;IAKD,CANgB,EAMdI,OANc,CAAjB;IAQAE,QAAQ,CAACM,OAAT,CAAiBV,aAAjB;IACA,OAAO,MAAMI,QAAQ,CAACO,SAAT,CAAmBX,aAAnB,CAAb;EACD,CAhBQ,EAgBN,EAhBM,CAAT;EAkBA,MAAMY,WAAW,GAAGnB,UAAU,CAAC,mCAAD,EAAsC;IAClE,kBAAkBG,SAAS,KAAK,MADkC;IAElE,mBAAmBA,SAAS,KAAK,OAFiC;IAGlE,kBAAkBA,SAAS,KAAK,IAHkC;IAIlE,mBAAmBA,SAAS,KAAK;EAJiC,CAAtC,CAA9B;EAOA,oBACE;IACE,GAAG,EAAEG,GADP;IAEE,SAAS,EAAG,aAAYa,WAAY,cAAaf,SAAS,GAAG,UAAH,GAAgB,EAAG,EAF/E;IAAA,UAIGF;EAJH;IAAA;IAAA;IAAA;EAAA,QADF;AAQD,CArCD;;GAAMD,M;;KAAAA,M;AAuCN,eAAeA,MAAf"},"metadata":{},"sourceType":"module"}